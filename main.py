import random
import time
import asyncio
from flask import Flask, request
from threading import Thread

from telegram import Update, Bot
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, filters
)

TOKEN = "7907591643:AAHzqBkgdUiCDaKRBO4_xGRzYhF56325Gi4"
URL = "https://sinklit-bot.onrender.com"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Render URL

bot = Bot(token=TOKEN)
application = ApplicationBuilder().token(TOKEN).build()

flask_app = Flask(__name__)
user_timers = {}

loot_items = [
    {
        "name": "–£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å",
        "rarity": "üîµ",
        "photo_path": "IMG_3704.jpeg",
        "description": "üå∏ –£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å\n–†–µ–¥–∫–æ—Å—Ç—å: üîµ\n–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: –Ω–∞ –µ—ë —Å–ø–∏–Ω–µ —Ä–∞—Å—Ç—ë—Ç —Ü–≤–µ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ –æ—á–µ–Ω—å –ª—é–±–∏—Ç."
    }
]

rarity_chances = {
    "üü¢": 75,
    "üîµ": 20,
    "üî¥": 5
}

def get_random_rarity():
    roll = random.randint(1, 100)
    cumulative = 0
    for rarity, chance in rarity_chances.items():
        cumulative += chance
        if roll <= cumulative:
            return rarity
    return "üü¢"

def get_random_loot():
    rarity = get_random_rarity()
    filtered_items = [item for item in loot_items if item["rarity"] == rarity]
    return random.choice(filtered_items) if filtered_items else None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    name = update.effective_user.first_name
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {name}!\n\n–ù–∞–ø–∏—à–∏ <b>–∫—Ä—è</b>, —á—Ç–æ–±—ã —è –Ω–∞—á–∞–ª –∏—Å–∫–∞—Ç—å —É—Ç–∫—É!\n–†–µ–¥–∫–∞—è —É—Ç–∫–∞ ‚Äî –Ω–µ –ø—Ä–æ–º–æ—Ä–≥–∞–π! ü¶Ü",
        parse_mode="HTML"
    )

async def handle_krya(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    now = time.time()

    if user_id not in user_timers or now >= user_timers[user_id]["end"]:
        duration = random.randint(600, 3600)
        user_timers[user_id] = {"end": now + duration}
        minutes = duration // 60
        await update.message.reply_text(
            f"üîç –í—Å—ë, –∏—â—É —É—Ç–∫—É! –≠—Ç–æ –∑–∞–π–º—ë—Ç –æ–∫–æ–ª–æ <b>{minutes} –º–∏–Ω—É—Ç</b>.\n–ù–µ –≤–æ–ª–Ω—É–π—Å—è, —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—É—Å—å —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ ü¶Ü",
            parse_mode="HTML"
        )
    else:
        remaining = int(user_timers[user_id]["end"] - now)
        if remaining <= 0:
            loot = get_random_loot()
            if loot:
                with open(loot["photo_path"], 'rb') as photo:
                    await update.message.reply_photo(photo=photo, caption=loot["description"])
            else:
                await update.message.reply_text("–°–µ–≥–æ–¥–Ω—è —É—Ç–∫–∞ –Ω–µ –ø—Ä–∏—à–ª–∞... –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ ü•≤")

            duration = random.randint(600, 3600)
            user_timers[user_id]["end"] = now + duration
        else:
            minutes = remaining // 60
            seconds = remaining % 60
            await update.message.reply_text(
                f"üôà –í—Å—ë –µ—â—ë –∏—â—É —É—Ç–∫—É!\n‚è± –û—Å—Ç–∞–ª–æ—Å—å: <b>{minutes} –º–∏–Ω {seconds} —Å–µ–∫</b>\n–ü–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ...",
                parse_mode="HTML"
            )

@flask_app.route("/")
def home():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω."

@flask_app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_update = request.get_json(force=True)
    update = Update.de_json(json_update, bot)
    asyncio.run(application.process_update(update))
    return "ok"

def run():
    flask_app.run(host="0.0.0.0", port=8080)

def keep_alive():
    thread = Thread(target=run)
    thread.start()

def main():
    keep_alive()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex(r"^(?i)–∫—Ä—è$"), handle_krya))
    bot.set_webhook(f"{URL}/{TOKEN}")
    print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∂–¥—ë—Ç –≤–µ–±—Ö—É–∫–∏...")
    while True:
        time.sleep(10)

if __name__ == "__main__":
    main()

