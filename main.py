import random
import time
import asyncio
from flask import Flask, request
from telegram import Update, Bot
from telegram.ext import (
    Application, MessageHandler, ContextTypes, filters
)

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7907591643:AAHzqBkgdUiCDaKRBO4_xGRzYhF56325Gi4"
WEBHOOK_URL = f"https://sinklit-bot.onrender.com/{TOKEN}"

# === Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
app = Flask(__name__)

# === Telegram Application ===
application = Application.builder().token(TOKEN).build()
bot = Bot(token=TOKEN)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è "–∫—Ä—è" ===
last_duck_time = 0
duck_interval = 0

async def handle_krya(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global last_duck_time, duck_interval
    now = time.time()

    if now - last_duck_time > duck_interval:
        duck_interval = random.randint(600, 3600)
        last_duck_time = now
        await update.message.reply_text(
            f"ü¶Ü –ü–æ—è–≤–∏–ª–∞—Å—å —Ä–µ–¥–∫–∞—è —É—Ç–∫–∞! –°–ª–µ–¥—É—é—â–∞—è —á–µ—Ä–µ–∑ {duck_interval // 60} –º–∏–Ω."
        )
    else:
        remaining = int(duck_interval - (now - last_duck_time))
        await update.message.reply_text(
            f"‚è≥ –î–æ —Å–ª–µ–¥—É—é—â–µ–π —Ä–µ–¥–∫–æ–π —É—Ç–∫–∏: {remaining // 60} –º–∏–Ω {remaining % 60} —Å–µ–∫."
        )

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ "–∫—Ä—è" ===
application.add_handler(
    MessageHandler(filters.TEXT & filters.Regex(r"(?i)^–∫—Ä—è$"), handle_krya)
)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Telegram ===
@app.post(f"/{TOKEN}")
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    asyncio.create_task(application.process_update(update))
    return "ok", 200

# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    async def run():
        await application.initialize()
        await application.start()
        await bot.set_webhook(WEBHOOK_URL)
        print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", WEBHOOK_URL)

    asyncio.run(run())
    app.run(host="0.0.0.0", port=8080)




