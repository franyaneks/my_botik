import os
import random
import time
import asyncio
from threading import Thread

from flask import Flask, request
from telegram import Update, Bot
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

TOKEN = "7907591643:AAHzqBkgdUiCDaKRBO4_xGRzYhF56325Gi4"  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
URL = "https://sinklit-bot.onrender.com"  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π URL Render

app = Flask(__name__)

bot = Bot(token=TOKEN)

# –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π event loop –¥–ª—è asyncio
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)

# –°–æ–∑–¥–∞–µ–º Application (python-telegram-bot)
application = ApplicationBuilder().token(TOKEN).build()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Ç–∞–π–º–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî –∫–æ–≥–¥–∞ –∫–æ–Ω—á–∏—Ç—Å—è –æ–∂–∏–¥–∞–Ω–∏–µ
user_timers = {}

# –õ—É—Ç ‚Äî —Ä–µ–¥–∫–∏–µ —É—Ç–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
loot_items = [
    {
        "name": "–£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å",
        "rarity": "üîµ",
        "photo_path": "IMG_3704.jpeg",  # –∫–∞—Ä—Ç–∏–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –ª–µ–∂–∞—Ç—å —Ä—è–¥–æ–º —Å main.py
        "description": "ü¶Ü –£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å\n–†–µ–¥–∫–æ—Å—Ç—å: üîµ\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: 1/10",
    },
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —É—Ç–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä:
    # {
    #     "name": "–£—Ç–∫–∞ –ì—Ä–æ–∑–æ–≤–∞—è",
    #     "rarity": "üî¥",
    #     "photo_path": "storm_duck.jpg",
    #     "description": "‚ö° –£—Ç–∫–∞ –ì—Ä–æ–∑–æ–≤–∞—è\n–†–µ–¥–∫–æ—Å—Ç—å: üî¥\n–û—á–µ–Ω—å —Ä–µ–¥–∫–∞—è —É—Ç–∫–∞!",
    # },
]

# –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)
rarity_chances = {"üü¢": 60, "üîµ": 25, "üî¥": 15}


def get_random_rarity():
    roll = random.randint(1, 100)
    cumulative = 0
    for rarity, chance in rarity_chances.items():
        cumulative += chance
        if roll <= cumulative:
            return rarity
    return "üü¢"


def get_random_loot():
    rarity = get_random_rarity()
    filtered = [item for item in loot_items if item["rarity"] == rarity]
    if filtered:
        return random.choice(filtered)
    # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ä–µ–¥–∫–æ—Å—Ç–∏ ‚Äî –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —á—Ç–æ-—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return None


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    username = update.effective_user.first_name
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n–ù–∞–ø–∏—à–∏ ü¶Ü <b>–∫—Ä—è</b>, —á—Ç–æ–±—ã —è –Ω–∞—á–∞–ª –∏—Å–∫–∞—Ç—å —É—Ç–∫—É!",
        parse_mode="HTML",
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è "–∫—Ä—è"
async def handle_krya(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    now = time.time()

    # –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ—à–ª–æ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫
    if user_id not in user_timers or now >= user_timers[user_id]:
        duration = random.randint(600, 3600)  # –æ—Ç 10 –º–∏–Ω—É—Ç –¥–æ 1 —á–∞—Å–∞ (—Å–µ–∫)
        user_timers[user_id] = now + duration
        minutes = duration // 60
        await update.message.reply_text(
            f"üîç –ù–∞—á–∏–Ω–∞—é –∏—Å–∫–∞—Ç—å —É—Ç–∫—É!\n‚è≥ –≠—Ç–æ –∑–∞–π–º—ë—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ <b>{minutes} –º–∏–Ω—É—Ç(—ã)</b>.\n–ü–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ, —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—É—Å—å —Å —É—Ç–∫–æ–π! ü¶Ü",
            parse_mode="HTML",
        )
    else:
        # –¢–∞–π–º–µ—Ä –µ—â—ë –Ω–µ –∏—Å—Ç—ë–∫ ‚Äî —Å—á–∏—Ç–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
        remaining = int(user_timers[user_id] - now)
        if remaining <= 0:
            # –í—Ä–µ–º—è –≤—ã—à–ª–æ ‚Äî –≤—ã–¥–∞—ë–º —É—Ç–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
            loot = get_random_loot()
            if loot:
                try:
                    with open(loot["photo_path"], "rb") as photo:
                        await update.message.reply_photo(photo=photo, caption=loot["description"])
                except FileNotFoundError:
                    await update.message.reply_text(
                        f"üê• –í–æ—Ç —Ç–≤–æ—è —É—Ç–∫–∞!\n{loot['description']}\n(–ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)"
                    )
            else:
                await update.message.reply_text("–°–µ–≥–æ–¥–Ω—è —É—Ç–∫–∞ –Ω–µ –Ω–∞—à–ª–∞—Å—å, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ. ü¶Ü")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
            duration = random.randint(600, 3600)
            user_timers[user_id] = now + duration
        else:
            # –°–æ–æ–±—â–∞–µ–º —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –∂–¥–∞—Ç—å
            minutes = remaining // 60
            seconds = remaining % 60
            await update.message.reply_text(
                f"üôà –Ø –≤—Å—ë –µ—â—ë –∏—â—É —É—Ç–∫—É!\n‚è± –û—Å—Ç–∞–ª–æ—Å—å: <b>{minutes} –º–∏–Ω {seconds} —Å–µ–∫</b>\n–ü–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ... ü¶Üüîç",
                parse_mode="HTML",
            )


# Flask —Ä–æ—É—Ç—ã
@app.route("/")
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!"


@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_update = request.get_json(force=True)
    update = Update.de_json(json_update, bot)
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ update –≤ asyncio loop
    asyncio.run_coroutine_threadsafe(application.process_update(update), loop)
    return "ok"


def run():
    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)


def keep_alive():
    thread = Thread(target=run)
    thread.start()


async def main_async():
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex(r"(?i)^–∫—Ä—è$"), handle_krya))
    await application.initialize()
    await bot.set_webhook(f"{URL}/{TOKEN}")
    print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ñ–¥—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")


if __name__ == "__main__":
    keep_alive()
    loop.run_until_complete(main_async())

    # –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –ø—Ä–æ—Å—Ç–æ –∂–¥–µ—Ç, Flask —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ
    import time

    while True:
        time.sleep(10)



