import random
import time
from flask import Flask
from threading import Thread

from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ContextTypes, filters
)

TOKEN = "7907591643:AAHzqBkgdUiCDaKRBO4_xGRzYhF56325Gi4"

flask_app = Flask('')

@flask_app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!"

def run():
    flask_app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

user_timers = {}

loot_items = [
    {
        "name": "–£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å",
        "rarity": "üîµ",
        "photo_path": "photo_2025-06-09_15-48-23.jpg",  # <-- –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        "description": "–£—Ç–∫–∞ –¢–∞–¥–º–∞–≤—Ä–∏—ç–ª—å\n–†–µ–¥–∫–æ—Å—Ç—å: üîµ\n1/10"
    }
]

rarity_chances = {
    "üü¢": 60,
    "üîµ": 25,
    "üî¥": 15
}

def get_random_rarity():
    roll = random.randint(1, 100)
    cumulative = 0
    for rarity, chance in rarity_chances.items():
        cumulative += chance
        if roll <= cumulative:
            return rarity
    return "üü¢"

def get_random_loot():
    rarity = get_random_rarity()
    filtered_items = [item for item in loot_items if item["rarity"] == rarity]
    if filtered_items:
        return random.choice(filtered_items)
    else:
        return None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    username = update.effective_user.first_name
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n"
        "–ù–∞–ø–∏—à–∏ ü¶Ü <b>–∫—Ä—è</b>, —á—Ç–æ–±—ã —è –Ω–∞—á–∞–ª –∏—Å–∫–∞—Ç—å —É—Ç–∫—É!",
        parse_mode="HTML"
    )

async def handle_krya(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    now = time.time()

    if user_id not in user_timers or now >= user_timers[user_id]['end']:
        duration = random.randint(600, 3600)
        user_timers[user_id] = {'end': now + duration}

        minutes = duration // 60
        await update.message.reply_text(
            f"üîç –ù–∞—á–∏–Ω–∞—é –∏—Å–∫–∞—Ç—å —É—Ç–∫—É!\n"
            f"‚è≥ –≠—Ç–æ –∑–∞–π–º—ë—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ <b>{minutes} –º–∏–Ω—É—Ç(—ã)</b>.\n"
            "–ü–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ, —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω—É—Å—å —Å —É—Ç–∫–æ–π! ü¶Ü",
            parse_mode="HTML"
        )
    else:
        remaining = int(user_timers[user_id]['end'] - now)
        if remaining <= 0:
            loot = get_random_loot()
            if loot:
                with open(loot["photo_path"], 'rb') as photo:
                    await update.message.reply_photo(
                        photo=photo,
                        caption=loot["description"]
                    )
            else:
                await update.message.reply_text("–°–µ–≥–æ–¥–Ω—è —É—Ç–∫–∞ –Ω–µ –Ω–∞—à–ª–∞—Å—å, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ. ü¶Ü")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∏—Å–∫–∞
            duration = random.randint(600, 3600)
            user_timers[user_id]['end'] = now + duration
        else:
            minutes = remaining // 60
            seconds = remaining % 60
            await update.message.reply_text(
                f"üôà –Ø –≤—Å—ë –µ—â—ë –∏—â—É —É—Ç–∫—É!\n"
                f"‚è± –û—Å—Ç–∞–ª–æ—Å—å: <b>{minutes} –º–∏–Ω {seconds} —Å–µ–∫</b>\n"
                "–ü–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ... ü¶Üüîç",
                parse_mode="HTML"
            )

if __name__ == '__main__':
    keep_alive()

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("(?i)^–∫—Ä—è$"), handle_krya))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()




